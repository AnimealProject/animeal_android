name: Firebase publish workflow

on:
  push:
    branches: [ develop ]
    paths-ignore:
      - '**/README.md'
      - '.github/**'

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
  KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
  KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
  KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
  FIREBASE_APP_DISTRIBUTION_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_APP_DISTRIBUTION_SERVICE_ACCOUNT }}

jobs:
  Build:
    strategy:
      matrix:
        flavor: [ dev, qa, prod ]
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - name: Add nested repo
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.KEY_STORE_REPOSITORY }}
          token: ${{ secrets.GH_PAT }}
          path: android-keystore

      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin
          cache: gradle

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Extract version name
        run: ./.github/scripts/extract-version.sh

      - name: Configure MapBox secrets
        run: |
          echo -e "\nMAPBOX_SECRET_TOKEN=${{ secrets.MAPBOX_SECRET_TOKEN }}" >> ./local.properties
          echo "MAPBOX_PUBLIC_TOKEN=${{ secrets.MAPBOX_PUBLIC_TOKEN }}" >> ./local.properties
          echo "MAPBOX_USERNAME=${{ secrets.MAPBOX_USERNAME }}" >> ./local.properties
          echo "MAPBOX_STYLE_ID=${{ secrets.MAPBOX_STYLE_ID }}" >> ./local.properties
          cat ./local.properties

      - name: Copy google services config
        run: echo $GOOGLE_SERVICES >> app/google-services.json

      - name: Copy amplify config files
        run: |
          mkdir -p app/src/${{ matrix.flavor }}/res/raw
          cat android-keystore/amplify-keys/${{ matrix.flavor }}/raw/amplifyconfiguration.json >> app/src/${{ matrix.flavor }}/res/raw/amplifyconfiguration.json
          cat android-keystore/amplify-keys/${{ matrix.flavor }}/raw/awsconfiguration.json >> app/src/${{ matrix.flavor }}/res/raw/awsconfiguration.json

      - name: Copy keystore
        uses: RollyPeres/base64-to-path@v1
        with:
          filePath: ${{ github.workspace }}/app/animeal_key_store.jks
          encodedString: ${{ secrets.KEY_STORE }}

      - name: Check keystore existence
        uses: andstor/file-existence-action@v1
        with:
          files: "app/animeal_key_store.jks"

      - name: Build release apk
        run: ./gradlew clean assemble${{ matrix.flavor }}Release

      - name: Rename and move release apk
        run: mv app/build/outputs/apk/${{ matrix.flavor }}/release/app-${{ matrix.flavor }}-release.apk ${{ matrix.flavor }}-release-${{ env.VERSION_NAME }}.apk

      - name: Upload release apk
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.flavor }}-release-${{ env.VERSION_NAME }}.apk
          path: ${{ matrix.flavor }}-release-${{ env.VERSION_NAME }}.apk

  Publish:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:

      - uses: actions/checkout@v3

      - name: Extract version name
        run: ./.github/scripts/extract-version.sh

      - name: Download releases
        uses: actions/download-artifact@v3

      - name: Create Google Service Account.json
        run: echo $FIREBASE_APP_DISTRIBUTION_SERVICE_ACCOUNT_JSON >> service_account.json

      - name: Publish dev release to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          serviceCredentialsFile: service_account.json
          groups: developers
          file: dev-release-${{ env.VERSION_NAME }}.apk/dev-release-${{ env.VERSION_NAME }}.apk

      - name: Publish qa release to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          serviceCredentialsFile: service_account.json
          groups: qa_team
          file: qa-release-${{ env.VERSION_NAME }}.apk/qa-release-${{ env.VERSION_NAME }}.apk

      - name: Publish prod release to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          serviceCredentialsFile: service_account.json
          groups: qa_team, developers
          file: prod-release-${{ env.VERSION_NAME }}.apk/prod-release-${{ env.VERSION_NAME }}.apk

